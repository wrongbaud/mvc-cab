{
    "arch": "ARM",
    "baudrate": 115200,
    "version": [
        "U-Boot 2017.09-g4857df5-dirty #lzy (Mar 24 2021 - 16:18:22 +0800)",
        "",
        "arm-linux-gnueabihf-gcc (Linaro GCC 6.3-2017.05) 6.3.1 20170404",
        "GNU ld (Linaro_Binutils-2017.05) 2.27.0.20161019"
    ],
    "prompt": "=> ",
    "commands": {
        "android_print_hdr": {
            "summary": "print android image header"
        },
        "base": {
            "summary": "print or set address offset"
        },
        "bdinfo": {
            "summary": "print Board Info structure"
        },
        "bidram_dump": {
            "summary": "Dump bidram layout"
        },
        "bmp": {
            "summary": "manipulate BMP image data"
        },
        "boot": {
            "summary": "boot default, i.e., run 'bootcmd'"
        },
        "boot_android": {
            "summary": "Execute the Android Bootloader flow."
        },
        "bootavb": {
            "summary": "Execute the Android avb a/b boot flow."
        },
        "bootd": {
            "summary": "boot default, i.e., run 'bootcmd'"
        },
        "bootm": {
            "summary": "boot application image from memory"
        },
        "bootp": {
            "summary": "boot image via network using BOOTP/TFTP protocol"
        },
        "bootrkp": {
            "summary": "Boot Linux Image from rockchip image type"
        },
        "bootz": {
            "summary": "boot Linux zImage image from memory"
        },
        "charge": {
            "summary": "Charge display"
        },
        "cmp": {
            "summary": "memory compare"
        },
        "coninfo": {
            "summary": "print console devices and information"
        },
        "cp": {
            "summary": "memory copy"
        },
        "crc32": {
            "summary": "checksum calculation"
        },
        "dhcp": {
            "summary": "boot image via network using DHCP/TFTP protocol"
        },
        "dm": {
            "summary": "Driver model low level access"
        },
        "download": {
            "summary": "enter rockusb/bootrom download mode"
        },
        "dtimg": {
            "summary": "manipulate dtb/dtbo Android image"
        },
        "dump_atags": {
            "summary": "Dump the content of the atags"
        },
        "dump_irqs": {
            "summary": "Dump IRQs"
        },
        "echo": {
            "summary": "echo args to console"
        },
        "editenv": {
            "summary": "edit environment variable"
        },
        "env": {
            "summary": "environment handling commands"
        },
        "exit": {
            "summary": "exit script"
        },
        "ext2load": {
            "summary": "load binary file from a Ext2 filesystem"
        },
        "ext2ls": {
            "summary": "list files in a directory (default /)"
        },
        "ext4load": {
            "summary": "load binary file from a Ext4 filesystem"
        },
        "ext4ls": {
            "summary": "list files in a directory (default /)"
        },
        "ext4size": {
            "summary": "determine a file's size"
        },
        "false": {
            "summary": "do nothing, unsuccessfully"
        },
        "fastboot": {
            "summary": "use USB or UDP Fastboot protocol"
        },
        "fatinfo": {
            "summary": "print information about filesystem"
        },
        "fatload": {
            "summary": "load binary file from a dos filesystem"
        },
        "fatls": {
            "summary": "list files in a directory (default /)"
        },
        "fatsize": {
            "summary": "determine a file's size"
        },
        "fatwrite": {
            "summary": "write file into a dos filesystem"
        },
        "fdt": {
            "summary": "flattened device tree utility commands"
        },
        "fstype": {
            "summary": "Look up a filesystem type"
        },
        "go": {
            "summary": "start application at address 'addr'"
        },
        "gpt": {
            "summary": "GUID Partition Table"
        },
        "help": {
            "summary": "print command description/usage"
        },
        "iomem": {
            "summary": "Show iomem data by device compatible(high priority) or node name"
        },
        "lcdputs": {
            "summary": "print string on video framebuffer"
        },
        "load": {
            "summary": "load binary file from a filesystem"
        },
        "loop": {
            "summary": "infinite loop on address range"
        },
        "ls": {
            "summary": "list files in a directory (default /)"
        },
        "md": {
            "summary": "memory display"
        },
        "mii": {
            "summary": "MII utility commands"
        },
        "mm": {
            "summary": "memory modify (auto-incrementing address)"
        },
        "mmc": {
            "summary": "MMC sub system"
        },
        "mmcinfo": {
            "summary": "display MMC info"
        },
        "mw": {
            "summary": "memory write (fill)"
        },
        "nfs": {
            "summary": "boot image via network using NFS protocol"
        },
        "nm": {
            "summary": "memory modify (constant address)"
        },
        "part": {
            "summary": "disk partition related commands"
        },
        "ping": {
            "summary": "send ICMP ECHO_REQUEST to network host"
        },
        "printenv": {
            "summary": "print environment variables"
        },
        "pxe": {
            "summary": "commands to get and boot from pxe files"
        },
        "rbrom": {
            "summary": "Perform RESET of the CPU"
        },
        "reboot": {
            "summary": "Perform RESET of the CPU, alias of 'reset'"
        },
        "reset": {
            "summary": "Perform RESET of the CPU"
        },
        "rkimgtest": {
            "summary": "Test if storage media have rockchip image"
        },
        "rknand": {
            "summary": "rockchip nand flash sub-system"
        },
        "rksfc": {
            "summary": "rockchip sfc sub-system"
        },
        "rktest": {
            "summary": "Rockchip board modules test"
        },
        "rockchip_show_bmp": {
            "summary": "load and display bmp from resource partition"
        },
        "rockchip_show_logo": {
            "summary": "load and display log from resource partition"
        },
        "rockusb": {
            "summary": "Use the rockusb Protocol"
        },
        "run": {
            "summary": "run commands in an environment variable"
        },
        "save": {
            "summary": "save file to a filesystem"
        },
        "setcurs": {
            "summary": "set cursor position within screen"
        },
        "setenv": {
            "summary": "set environment variables"
        },
        "showvar": {
            "summary": "print local hushshell variables"
        },
        "size": {
            "summary": "determine a file's size"
        },
        "source": {
            "summary": "run script from memory"
        },
        "sysboot": {
            "summary": "command to get and boot from syslinux files"
        },
        "sysmem_dump": {
            "summary": "Dump sysmem layout"
        },
        "sysmem_search": {
            "summary": "Search a available sysmem region"
        },
        "test": {
            "summary": "minimal test like /bin/sh"
        },
        "tftp": {
            "summary": "download image via network using TFTP protocol"
        },
        "true": {
            "summary": "do nothing, successfully"
        },
        "ums": {
            "summary": "Use the UMS [USB Mass Storage]"
        },
        "usb": {
            "summary": "USB sub-system"
        },
        "usbboot": {
            "summary": "boot from USB device"
        },
        "version": {
            "summary": "print monitor, compiler and linker version"
        }
    },
    "env_vars": {
        "arch": "arm",
        "baudrate": "115200",
        "board": "evb_rk3128",
        "board_name": "evb_rk3128",
        "boot_a_script": "load ${devtype} ${devnum}:${distro_bootpart} ${scriptaddr} ${prefix}${script}; source ${scriptaddr}",
        "boot_extlinux": "sysboot ${devtype} ${devnum}:${distro_bootpart} any ${scriptaddr} ${prefix}extlinux/extlinux.conf",
        "boot_net_usb_start": "usb start",
        "boot_prefixes": "/ /boot/",
        "boot_script_dhcp": "boot.scr.uimg",
        "boot_scripts": "boot.scr.uimg boot.scr",
        "boot_targets": "mmc1 mmc0 rknand0 usb0 pxe dhcp ",
        "bootargs": "storagemedia=nand androidboot.storagemedia=nand androidboot.mode=normal ",
        "bootcmd": "boot_android ${devtype} ${devnum};bootrkp;run distro_bootcmd;",
        "bootcmd_dhcp": "run boot_net_usb_start; if dhcp ${scriptaddr} ${boot_script_dhcp}; then source ${scriptaddr}; fi;",
        "bootcmd_mmc0": "setenv devnum 0; run mmc_boot",
        "bootcmd_mmc1": "setenv devnum 1; run mmc_boot",
        "bootcmd_pxe": "run boot_net_usb_start; dhcp; if pxe get; then pxe boot; fi",
        "bootcmd_rknand0": "setenv devnum 0; run rknand_boot",
        "bootcmd_usb0": "setenv devnum 0; run usb_boot",
        "bootdelay": "0",
        "cpu": "armv7",
        "devnum": "0",
        "devtype": "spinand",
        "distro_bootcmd": "for target in ${boot_targets}; do run bootcmd_${target}; done",
        "ethaddr": "d2:79:07:fc:f7:89",
        "fdt_addr1_r": "0x61700000",
        "fdt_addr_r": "0x68300000",
        "kernel_addr1_r": "0x62008000",
        "kernel_addr_r": "0x62008000",
        "mmc_boot": "if mmc dev ${devnum}; then setenv devtype mmc; run scan_dev_for_boot_part; fi",
        "partitions": "uuid_disk=${uuid_gpt_disk};name=loader1,start=32K,size=4000K,uuid=${uuid_gpt_loader1};name=loader2,start=8MB,size=4MB,uuid=${uuid_gpt_loader2};name=trust,size=4M,uuid=${uuid_gpt_atf};name=boot,size=112M,bootable,uuid=${uuid_gpt_boot};name=rootfs,size=-,uuid=69DAD710-2CE4-4E3C-B16C-21A1D49ABED3;",
        "pxefile_addr1_r": "0x60600000",
        "pxefile_addr_r": "0x60600000",
        "ramdisk_addr1_r": "0x63000000",
        "ramdisk_addr_r": "0x6a200000",
        "rkimg_bootdev": "if mmc dev 1 && rkimgtest mmc 1; then setenv devtype mmc; setenv devnum 1; echo Boot from SDcard;elif mmc dev 0; then setenv devtype mmc; setenv devnum 0;elif mtd_blk dev 0; then setenv devtype mtd; setenv devnum 0;elif mtd_blk dev 1; then setenv devtype mtd; setenv devnum 1;elif mtd_blk dev 2; then setenv devtype mtd; setenv devnum 2;elif rknand dev 0; then setenv devtype rknand; setenv devnum 0;elif rksfc dev 0; then setenv devtype spinand; setenv devnum 0;elif rksfc dev 1; then setenv devtype spinor; setenv devnum 1;fi; ",
        "scan_dev_for_boot": "echo Scanning ${devtype} ${devnum}:${distro_bootpart}...; for prefix in ${boot_prefixes}; do run scan_dev_for_extlinux; run scan_dev_for_scripts; done;",
        "scan_dev_for_boot_part": "part list ${devtype} ${devnum} -bootable devplist; env exists devplist || setenv devplist 1; for distro_bootpart in ${devplist}; do if fstype ${devtype} ${devnum}:${distro_bootpart} bootfstype; then run scan_dev_for_boot; fi; done",
        "scan_dev_for_extlinux": "if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}extlinux/extlinux.conf; then echo Found ${prefix}extlinux/extlinux.conf; run boot_extlinux; echo SCRIPT FAILED: continuing...; fi",
        "scan_dev_for_scripts": "for script in ${boot_scripts}; do if test -e ${devtype} ${devnum}:${distro_bootpart} ${prefix}${script}; then echo Found U-Boot script ${prefix}${script}; run boot_a_script; echo SCRIPT FAILED: continuing...; fi; done",
        "scriptaddr": "0x60500000",
        "scriptaddr1": "0x60500000",
        "serial#": "c3d9b8674f4b94f6",
        "soc": "rockchip",
        "stderr": "serial,vidconsole",
        "stdout": "serial,vidconsole",
        "usb_boot": "usb start; if usb dev ${devnum}; then setenv devtype usb; run scan_dev_for_boot_part; fi",
        "vendor": "rockchip"
    },
    "payload_base": "loadaddr",
    "payload_offset": 33554432,
    "gd": {
        "bd": {
            "arch_number": {
                "name": "arch_number",
                "value": 0,
                "suffix": ""
            },
            "boot_params": {
                "name": "boot_params",
                "value": 0,
                "suffix": ""
            },
            "currenteth": {
                "name": "current eth",
                "value": "unknown",
                "suffix": ""
            },
            "baudrate": {
                "name": "baudrate",
                "value": 115200,
                "suffix": "bps"
            },
            "tlbaddr": {
                "name": "TLB addr",
                "value": 1878982656,
                "suffix": ""
            },
            "relocaddr": {
                "name": "relocaddr",
                "value": 1843544064,
                "suffix": ""
            },
            "relocoff": {
                "name": "reloc off",
                "value": 0,
                "suffix": ""
            },
            "irq_sp": {
                "name": "irq_sp",
                "value": 1809948384,
                "suffix": ""
            },
            "spstart": {
                "name": "sp start",
                "value": 1809940192,
                "suffix": ""
            },
            "fbbase": {
                "name": "FB base",
                "value": 0,
                "suffix": ""
            },
            "fdt_blob": {
                "name": "fdt_blob",
                "value": 68300000,
                "suffix": ""
            },
            "dram_bank": {
                "name": "DRAM bank(s)",
                "value": {
                    "0": {
                        "start": 1610612736,
                        "size": 138412032
                    },
                    "1": {
                        "start": 1763770368,
                        "size": 115277824
                    }
                },
                "suffix": ""
            }
        },
        "_done": true
    },
    "depthcharge_timestamp": "2022-01-05T09:43:36.958820",
    "depthcharge_version": "0.3.0"
}
